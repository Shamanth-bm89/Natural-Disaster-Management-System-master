-- Table: public.admin_login

-- DROP TABLE public.admin_login;

CREATE TABLE public.admin_login
(
    admin_id integer NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    phno bigint NOT NULL,
    disasters_id integer,
    CONSTRAINT admin_login_pkey PRIMARY KEY (admin_id),
    CONSTRAINT admin_login_disasters_id_fkey FOREIGN KEY (disasters_id)
        REFERENCES public.disaster (disaster_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE public.admin_login
    OWNER to postgres;

-- Trigger: PASSWORDTRIGGER 

-- DROP TRIGGER "PASSWORDTRIGGER " ON public.admin_login;

CREATE TRIGGER "PASSWORDTRIGGER "
    BEFORE INSERT OR UPDATE OF password
    ON public.admin_login
    FOR EACH ROW
    EXECUTE PROCEDURE public.passwordtriggerfunction();

-- Trigger: phonenumberdigits

-- DROP TRIGGER phonenumberdigits ON public.admin_login;

CREATE TRIGGER phonenumberdigits
    BEFORE INSERT OR UPDATE OF phno
    ON public.admin_login
    FOR EACH ROW
    EXECUTE PROCEDURE public.phonenumberdigits();


-- Table: public.campaign

-- DROP TABLE public.campaign;

CREATE TABLE public.campaign
(
    campaign_id integer NOT NULL,
    cname text COLLATE pg_catalog."default" NOT NULL,
    clocation text COLLATE pg_catalog."default" NOT NULL,
    cdate date NOT NULL,
    CONSTRAINT campaign_pkey PRIMARY KEY (campaign_id)
)

TABLESPACE pg_default;

ALTER TABLE public.campaign
    OWNER to postgres;


-- Table: public.disaster

-- DROP TABLE public.disaster;

CREATE TABLE public.disaster
(
    disaster_id integer NOT NULL,
    dname text COLLATE pg_catalog."default" NOT NULL,
    dlocation text COLLATE pg_catalog."default" NOT NULL,
    total_loss bigint NOT NULL,
    disasterdate date,
    area_affected text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT disaster_pkey PRIMARY KEY (disaster_id)
)

TABLESPACE pg_default;

ALTER TABLE public.disaster
    OWNER to postgres;

-- Table: public.donation

-- DROP TABLE public.donation;

CREATE TABLE public.donation
(
    donation_id integer NOT NULL,
    donar_name text COLLATE pg_catalog."default" NOT NULL,
    phno bigint NOT NULL,
    amount_donated bigint NOT NULL,
    disaster_id integer,
    CONSTRAINT donation_pkey PRIMARY KEY (donation_id),
    CONSTRAINT donation_disaster_id_fkey FOREIGN KEY (disaster_id)
        REFERENCES public.disaster (disaster_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE public.donation
    OWNER to postgres;

-- Trigger: phonenumberdigits

-- DROP TRIGGER phonenumberdigits ON public.donation;

CREATE TRIGGER phonenumberdigits
    BEFORE INSERT OR UPDATE OF phno
    ON public.donation
    FOR EACH ROW
    EXECUTE PROCEDURE public.phonenumberdigits();

-- Table: public.officer

-- DROP TABLE public.officer;

CREATE TABLE public.officer
(
    officer_id integer NOT NULL,
    disasters_id integer,
    dname text COLLATE pg_catalog."default" NOT NULL,
    oname text COLLATE pg_catalog."default" NOT NULL,
    campaign_id integer,
    user_id integer,
    CONSTRAINT officer_pkey PRIMARY KEY (officer_id),
    CONSTRAINT officer_campaign_id_fkey FOREIGN KEY (campaign_id)
        REFERENCES public.campaign (campaign_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID,
    CONSTRAINT officer_disasters_id_fkey FOREIGN KEY (disasters_id)
        REFERENCES public.disaster (disaster_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT officer_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.user_login (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE public.officer
    OWNER to postgres;

-- Table: public.user_login

-- DROP TABLE public.user_login;

CREATE TABLE public.user_login
(
    user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_name text COLLATE pg_catalog."default" NOT NULL,
    user_password text COLLATE pg_catalog."default" NOT NULL,
    phno bigint NOT NULL,
    aadhar_no bigint NOT NULL,
    disasters_id integer,
    CONSTRAINT user_login_pkey PRIMARY KEY (user_id),
    CONSTRAINT unique_aadhar_number UNIQUE (aadhar_no)
,
    CONSTRAINT user_login_disasters_id_fkey FOREIGN KEY (disasters_id)
        REFERENCES public.disaster (disaster_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID,
    CONSTRAINT phno CHECK (phno >= 1111111111 AND phno <= '9999999999'::bigint)
)

TABLESPACE pg_default;

ALTER TABLE public.user_login
    OWNER to postgres;

-- Trigger: UserPasswordTrigger

-- DROP TRIGGER "UserPasswordTrigger" ON public.user_login;

CREATE TRIGGER "UserPasswordTrigger"
    BEFORE INSERT OR UPDATE OF user_password
    ON public.user_login
    FOR EACH ROW
    EXECUTE PROCEDURE public.passwordtriggerfunction();

-- Trigger: aadharnumberdigits

-- DROP TRIGGER aadharnumberdigits ON public.user_login;

CREATE TRIGGER aadharnumberdigits
    BEFORE INSERT OR UPDATE OF aadhar_no
    ON public.user_login
    FOR EACH ROW
    EXECUTE PROCEDURE public."Aadharnumberdigits"();

-- Trigger: phonenumberdigits

-- DROP TRIGGER phonenumberdigits ON public.user_login;

CREATE TRIGGER phonenumberdigits
    BEFORE INSERT OR UPDATE OF phno
    ON public.user_login
    FOR EACH ROW
    EXECUTE PROCEDURE public.phonenumberdigits();


